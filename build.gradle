apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'org.xblackcat'
def projectTitle = 'SJPU Saver'
version = new File('build.txt').getText('UTF-8')
ext.commonManifest = manifest {
    attributes(
            "Implementation-Title": projectTitle,
            "Implementation-Version": version
    )
}

defaultTasks 'clean', 'buildAll'

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.apache.commons', name: 'commons-compress', version: '1.5+', transitive: false
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.+'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.+'
    compile group: 'commons-net', name: 'commons-net', version: '3.+'
    compile group: 'com.jcraft', name: 'jsch', version: '0.1.+'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
    manifest = project.manifest {
        from commonManifest
    }
}

jar {
    manifest {
        attributes(
                "Main-Class": 'org.xblackcat.sjpu.saver.SaverUtils',
                "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
        )
        from commonManifest
    }
}

javadoc {
    title = projectTitle
}

task docsJar(dependsOn: javadoc, type: Jar) {
    from javadoc.outputs.files
    classifier = 'docs'
    manifest = project.manifest {
        from commonManifest
    }
}

task sourcesZip(type: Zip) {
    from project.projectDir
    include 'src/**'
    include 'test/**'
    include 'build.*'
    include 'LICENSE'
    into('lib') {
        from configurations.testCompile
        include '*'
    }
    classifier = 'sources'
}

task binZip(dependsOn: 'jar', type: Zip) {
    from jar.outputs.files
    into('dep') {
        from configurations.compile
    }
    classifier = 'bin'
}

sourceSets {
    main {
        java {
            srcDir 'src/java'
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: mavenCentralUrl) {
                authentication(userName: mavenCentralUser, password: mavenCentralPassword)
            }
        }
    }
}

task buildAll(dependsOn: ['build', 'sourcesJar', 'binZip', 'sourcesZip', 'docsJar']) {}